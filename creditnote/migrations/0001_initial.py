# Generated by Django 5.2.6 on 2025-10-15 12:01

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('invoices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('qb_credit_id', models.CharField(db_index=True, max_length=50)),
                ('doc_number', models.CharField(blank=True, max_length=100, null=True)),
                ('txn_date', models.DateField()),
                ('total_amt', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('customer_ref_value', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('private_note', models.TextField(blank=True, null=True)),
                ('customer_memo', models.TextField(blank=True, null=True)),
                ('sync_token', models.CharField(max_length=50)),
                ('template_id', models.CharField(blank=True, max_length=100, null=True)),
                ('template_name', models.CharField(blank=True, max_length=255, null=True)),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_notes', to='companies.company')),
                ('related_invoice', models.ForeignKey(blank=True, help_text='Invoice this credit note is applied to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_notes', to='invoices.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='CreditNoteLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('line_num', models.IntegerField()),
                ('item_ref_value', models.CharField(blank=True, max_length=50, null=True)),
                ('item_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('credit_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='creditnote.creditnote')),
            ],
            options={
                'ordering': ['line_num'],
            },
        ),
        migrations.AddIndex(
            model_name='creditnote',
            index=models.Index(fields=['company', 'txn_date'], name='creditnote__company_0afae0_idx'),
        ),
        migrations.AddIndex(
            model_name='creditnote',
            index=models.Index(fields=['qb_credit_id'], name='creditnote__qb_cred_e092aa_idx'),
        ),
        migrations.AddIndex(
            model_name='creditnote',
            index=models.Index(fields=['customer_name'], name='creditnote__custome_dc3153_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='creditnote',
            unique_together={('company', 'qb_credit_id')},
        ),
        migrations.AlterUniqueTogether(
            name='creditnoteline',
            unique_together={('credit_note', 'line_num')},
        ),
    ]
